{"version":3,"file":"static/js/694.c434f821.chunk.js","mappings":"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","sources":["Components/Header.js","hooks/useDebounce.js"],"sourcesContent":["import React, { useContext, useState, useMemo, useCallback, useEffect, useRef } from \"react\";\r\nimport { FcSearch } from \"react-icons/fc\";\r\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\nimport { setUserDetails } from \"../store/userSlice\";\r\nimport Context from \"../Context\";\r\nimport { useSound } from \"../Context/SoundContext\";\r\nimport { useDebounce } from \"../hooks/useDebounce\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faBars, faSignOutAlt, faVolumeUp, faVolumeMute } from '@fortawesome/free-solid-svg-icons';\r\nimport { PiBell } from 'react-icons/pi';\r\nimport notificationSound from '../Assets/notification.mp3';\r\nimport ROLE from \"../common/role\";\r\nimport SummaryApi from \"../common\";\r\nimport { BiSearch } from 'react-icons/bi';\r\nimport SidePanel from \"./SidePanel\";\r\nimport './Header.css';\r\nimport './Pop.css';\r\n\r\nconst Header = () => {\r\n    const dispatch = useDispatch();\r\n    const [mobileMenuOpen, setMobileMenuOpen] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const { user } = useSelector((state) => state.user);\r\n    const { soundEnabled, toggleSound } = useSound();\r\n    const {token} = useContext(Context);\r\n    const navigate = useNavigate();\r\n    const searchInput = useLocation();\r\n    const [unreadNotificationCount, setUnreadNotificationCount] = useState(0);\r\n    const [showPopup, setShowPopup] = useState(false);\r\n    const [popupMessage, setPopupMessage] = useState('');\r\n    const [animateNotification, setAnimateNotification] = useState(false);\r\n    const audioRef = useRef(null);\r\n    const searchQuery = useMemo(() => {\r\n    const URLSearch = new URLSearchParams(searchInput.search);\r\n        return URLSearch.get(\"q\") || \"\";\r\n    }, [searchInput]);\r\n    const [search, setSearch] = useState(searchQuery);\r\n    const debouncedSearch = useDebounce(search, 300);\r\n\r\n    // Notification Sound\r\n    const playNotificationSound = () => {\r\n        if (soundEnabled && audioRef.current) {\r\n            audioRef.current.currentTime = 0;\r\n            audioRef.current.play().catch(err => {\r\n                console.warn(\"Notification sound failed:\", err);\r\n            });\r\n        }\r\n    };\r\n\r\n    // Vibration\r\n    const triggerVibration = () => {\r\n        if (navigator.vibrate) {\r\n            navigator.vibrate([100, 50, 100]);\r\n        }\r\n    };\r\n\r\n    // Function to truncate words\r\n    const truncateWords = (text, limit) => {\r\n        const words = text.split(/\\s+/);\r\n        if (words.length > limit) {\r\n            return {\r\n                truncated: words.slice(0, limit).join(' ') + '...',\r\n                original: text,\r\n                isTruncated: true,\r\n            };\r\n        }\r\n        return {\r\n            truncated: text,\r\n            original: text,\r\n            isTruncated: false,\r\n        };\r\n    };\r\n\r\n    // Fetch Unread Count\r\n    const fetchUnreadCount = useCallback(async () => {\r\n        if (user?._id) {\r\n            try {\r\n                const response = await fetch(SummaryApi.notificationCount.url, {\r\n                    credentials: 'include',\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                });\r\n                const data = await response.json();\r\n                if (data.success) {\r\n                    setUnreadNotificationCount(data.count);\r\n                }\r\n            } catch (error) {\r\n                console.error(\"❌ Error fetching unread count:\", error);\r\n            }\r\n        }\r\n    }, [user?._id]);\r\n\r\n    // Fetch New Notifications\r\n    const fetchNewNotifications = useCallback(async () => {\r\n        if (user?._id) {\r\n            try {\r\n                const response = await fetch(SummaryApi.getNewNotifications.url, {\r\n                    credentials: 'include',\r\n                    headers: { 'Content-Type': 'application/json' }\r\n                });\r\n                const data = await response.json();\r\n                if (data.success && Array.isArray(data.newNotifications)) {\r\n                    const latest = data.newNotifications[0];\r\n                    const lastShownId = localStorage.getItem('lastNotifiedId');\r\n                    if (latest && latest._id !== lastShownId) {\r\n                        localStorage.setItem('lastNotifiedId', latest._id);\r\n                        setPopupMessage(latest.message || \"New notification received!\");\r\n                        setShowPopup(true);\r\n                        setAnimateNotification(true);\r\n                        playNotificationSound();\r\n                        triggerVibration();\r\n                        // Reset animation\r\n                        setTimeout(() => setAnimateNotification(false), 2000);\r\n                        // Hide popup after 4 seconds\r\n                        setTimeout(() => setShowPopup(false), 4000);\r\n                    }\r\n                }\r\n            } catch (error) {\r\n                console.error(\"❌ Error fetching new notifications:\", error);\r\n            }\r\n        }\r\n    }, [user?._id, playNotificationSound, triggerVibration]);\r\n\r\n    useEffect(() => {\r\n        if (debouncedSearch.trim()) {\r\n            navigate(`/search?q=${encodeURIComponent(debouncedSearch)}`);\r\n        }\r\n    }, [debouncedSearch, navigate]);\r\n\r\n    useEffect(() => {\r\n        fetchUnreadCount();\r\n        fetchNewNotifications();\r\n        const unreadCountIntervalId = setInterval(fetchUnreadCount, 5000);\r\n        const newNotificationsIntervalId = setInterval(fetchNewNotifications, 5000);\r\n        return () => {\r\n            clearInterval(unreadCountIntervalId);\r\n            clearInterval(newNotificationsIntervalId);\r\n        };\r\n    }, [fetchUnreadCount, fetchNewNotifications]);\r\n\r\n    const handleLogout = useCallback(async () => {\r\n        setLoading(true);\r\n        try {\r\n            const response = await fetch(SummaryApi.logout_user.url, {\r\n                method: SummaryApi.logout_user.method,\r\n                credentials: \"include\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            });\r\n            const data = await response.json();\r\n            if (data.success) {\r\n                toast.success(data.message);\r\n                dispatch(setUserDetails(null));\r\n                navigate(\"/\");\r\n            } else {\r\n                toast.error(data.message);\r\n            }\r\n        } catch (error) {\r\n            toast.error(\"Logout failed. Please try again.\");\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }, [dispatch, navigate, token]);\r\n\r\n    const toggleMobileMenu = useCallback(() => setMobileMenuOpen((prev) => !prev), []);\r\n    const closeMobileMenu = useCallback(() => setMobileMenuOpen(false), []);\r\n    const truncatedMessage = useMemo(() => truncateWords(popupMessage, 10), [popupMessage]);\r\n\r\n    useEffect(() => {\r\n        console.log(\"Header soundEnabled:\", soundEnabled);\r\n    }, [soundEnabled]);\r\n\r\n    return (\r\n        <>\r\n            <header className=\"header-spa left-0 right-0 top-0 pt-8 mb-8 inset-0 bg-black/80 backdrop-blur-md fixed w-full z-50 border-b border-white/20 shadow-md transition-all duration-300 flex items-center justify-between px-4 sm:px-6 lg:px-8\">\r\n                <div className=\"w-full mx-auto flex items-center justify-between\">\r\n                    {/* Menu Icon */}\r\n                    <div className=\"flex items-center gap-2\">\r\n                        <button\r\n                            onClick={toggleMobileMenu}\r\n                            className=\"text-gray-500 hover:text-blue-600 md:hidden\"\r\n                            aria-expanded={mobileMenuOpen}\r\n                        >\r\n                            <FontAwesomeIcon icon={faBars} className=\"h-5 w-5\" />\r\n                        </button>\r\n                    </div>\r\n                    {/* Logo */}\r\n                    <Link to=\"/home\" className=\"hidden minecraft-font text-[14px] md:flex items-center font-extrabold text-transparent text-2xl bg-clip-text bg-gradient-to-r from-cyan-400 via-purple-500 to-pink-500 mr-4 tracking-wide\">\r\n                        SXN\r\n                    </Link>\r\n                    {/* Search Input - Desktop */}\r\n                    <div className=\"hidden md:flex items-center bg-black border-2 rounded-md px-4 py-[6px] w-72 glow-border\">\r\n                        <FcSearch className=\"text-white h-5 w-5 mr-2\" />\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Search gift cards...\"\r\n                            className=\"bg-transparent minecraft-font text-white text-[12px] outline-none w-full placeholder:text-[8px] placeholder-gray-600\"\r\n                            value={search}\r\n                            onChange={(e) => setSearch(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    {/* Mobile Search */}\r\n                    <div className=\"md:hidden flex items-center w-full mx-4\">\r\n                        <div className=\"flex items-center bg-black border-2 rounded-md px-2 py-[6px] w-full glow-border\">\r\n                            <BiSearch className=\"text-yellow-700 h-5 w-5 mr-2\" />\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Search gift cards...\"\r\n                                className=\"bg-transparent minecraft-font text-white text-[12px] outline-none w-full placeholder:text-[8px] placeholder-gray-600\"\r\n                                value={search}\r\n                                onChange={(e) => setSearch(e.target.value)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    {/* Main Nav */}\r\n                    <nav className=\"hidden minecraft-font text-[9px] md:flex items-center gap-2\">\r\n                        <Link to=\"/record\" className=\"px-3 py-1 border border-cyan-500 text-gray-900 hover:bg-cyan-600 hover:text-white rounded transition duration-200\">\r\n                            Trade Status\r\n                        </Link>\r\n\r\n                        <Link to=\"/datapad\" className=\"px-3 py-1 border border-yellow-500 text-gray-900 hover:bg-yellow-500 hover:text-black rounded transition duration-200\">\r\n                            DataPad\r\n                        </Link>\r\n                        {user?.role === ROLE.ADMIN && (\r\n                            <Link to=\"/admin-panel\" className=\"px-3 py-1 border border-purple-500 text-gray-900 hover:bg-purple-700 hover:text-white rounded transition duration-200\">\r\n                                Admin\r\n                            </Link>\r\n                        )}\r\n                        <Link to=\"/notifications\" className=\"relative px-3 py-1 border border-emerald-500 text-gray-900 hover:bg-emerald-600 hover:text-white rounded transition duration-200\">\r\n                            <PiBell className={animateNotification ? 'animate-ping-slow text-2xl' : 'text-2xl'} />\r\n                            {unreadNotificationCount > 0 && (\r\n                                <span className=\"absolute -top-1 -right-1 bg-red-600 text-white text-xs px-1.5 py-0.5 rounded-full\">\r\n                                    {unreadNotificationCount}\r\n                                </span>\r\n                            )}\r\n                        </Link>\r\n                        {user?._id && (\r\n                            <button\r\n                                onClick={handleLogout}\r\n                                disabled={loading}\r\n                                className=\"px-3 py-1 border border-red-500 text-gray-900 hover:bg-red-600 hover:text-white rounded transition flex items-center\"\r\n                            >\r\n                                <FontAwesomeIcon icon={faSignOutAlt} className=\"mr-1\" />\r\n                                Logout\r\n                            </button>\r\n                        )}\r\n                        {/* Audio Toggle Switch - Desktop */}\r\n                        <button\r\n                            onClick={toggleSound}\r\n                            className=\"px-3 py-1 border border-gray-500 text-gray-900 hover:bg-gray-600 hover:text-white rounded transition flex items-center\"\r\n                            title={soundEnabled ? \"Disable Sound\" : \"Enable Sound\"}\r\n                        >\r\n                            <FontAwesomeIcon icon={soundEnabled ? faVolumeUp : faVolumeMute} className=\"mr-1\" />\r\n                            <span className=\"hidden sm:inline\">{soundEnabled ? \"Sound On\" : \"Sound Off\"}</span>\r\n                        </button>\r\n                    </nav>\r\n\r\n                    {/* Mobile Audio Toggle */}\r\n                    <div className=\"md:hidden flex items-center ml-4\">\r\n                        <button\r\n                            onClick={toggleSound}\r\n                            className=\"text-gray-500 hover:text-blue-600\"\r\n                            title={soundEnabled ? \"Disable Sound\" : \"Enable Sound\"}\r\n                        >\r\n                            <FontAwesomeIcon icon={soundEnabled ? faVolumeUp : faVolumeMute} className=\"h-5 w-5\" />\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Integrated PopAlert */}\r\n                {showPopup && (\r\n                    <div className=\"pop-alert w-screen right-0 left-0 bg-white text-black px-4 py-8 -mt-4 shadow-lg rounded-lg animate-slide-in\">\r\n                        <p className=\"text-sm font-medium\">{truncatedMessage.truncated}</p>\r\n                        {truncatedMessage.isTruncated && (\r\n                            <Link to=\"/notifications\" className=\"block text-blue-500 hover:underline text-xs\">\r\n                                Read More\r\n                            </Link>\r\n                        )}\r\n                    </div>\r\n                )}\r\n                <audio ref={audioRef} src={notificationSound} preload=\"auto\" />\r\n                <SidePanel\r\n                    open={mobileMenuOpen}\r\n                    setOpen={setMobileMenuOpen}\r\n                    handleLogout={handleLogout}\r\n                    loading={loading}\r\n                    onCloseMenu={closeMobileMenu}\r\n                />\r\n            </header>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Header;","import { useState, useEffect } from 'react';\r\n\r\nexport const useDebounce = (value, delay) => {\r\n    const [debouncedValue, setDebouncedValue] = useState(value);\r\n\r\n    useEffect(() => {\r\n        const handler = setTimeout(() => {\r\n            setDebouncedValue(value);\r\n        }, delay);\r\n\r\n        return () => {\r\n            clearTimeout(handler);\r\n        };\r\n    }, [value, delay]);\r\n\r\n    return debouncedValue;\r\n};"],"names":["Header","dispatch","useDispatch","mobileMenuOpen","setMobileMenuOpen","useState","loading","setLoading","user","useSelector","state","soundEnabled","toggleSound","useSound","token","useContext","Context","navigate","useNavigate","searchInput","useLocation","unreadNotificationCount","setUnreadNotificationCount","showPopup","setShowPopup","popupMessage","setPopupMessage","animateNotification","setAnimateNotification","audioRef","useRef","searchQuery","useMemo","URLSearchParams","search","get","setSearch","debouncedSearch","useDebounce","value","delay","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","playNotificationSound","current","currentTime","play","catch","err","console","warn","triggerVibration","navigator","vibrate","fetchUnreadCount","useCallback","async","_id","response","fetch","SummaryApi","notificationCount","url","credentials","headers","data","json","success","count","error","fetchNewNotifications","getNewNotifications","Array","isArray","newNotifications","latest","lastShownId","localStorage","getItem","setItem","message","trim","encodeURIComponent","unreadCountIntervalId","setInterval","newNotificationsIntervalId","clearInterval","handleLogout","logout_user","method","Authorization","toast","setUserDetails","toggleMobileMenu","prev","closeMobileMenu","truncatedMessage","truncateWords","text","limit","words","split","length","truncated","slice","join","original","isTruncated","log","_jsx","_Fragment","children","_jsxs","className","onClick","FontAwesomeIcon","icon","faBars","Link","to","FcSearch","type","placeholder","onChange","e","target","BiSearch","role","ROLE","ADMIN","PiBell","disabled","faSignOutAlt","title","faVolumeUp","faVolumeMute","ref","src","notificationSound","preload","SidePanel","open","setOpen","onCloseMenu"],"sourceRoot":""}