{"version":3,"file":"static/js/86.84be869e.chunk.js","mappings":"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","sources":["Components/Header.js","hooks/useDebounce.js"],"sourcesContent":["import { useContext, useState, useMemo, useCallback, useEffect, useRef } from \"react\";\r\nimport { FcSearch } from \"react-icons/fc\";\r\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\nimport { setUserDetails } from \"../store/userSlice\";\r\nimport Context from \"../Context\";\r\nimport { useSound } from \"../Context/SoundContext\";\r\nimport { useDebounce } from \"../hooks/useDebounce\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faBars, faSignOutAlt, faVolumeUp, faVolumeMute, faArrowLeft } from '@fortawesome/free-solid-svg-icons';\r\nimport { PiBell } from 'react-icons/pi';\r\nimport notificationSound from '../Assets/notification.mp3';\r\nimport SummaryApi from \"../common\";\r\nimport { BiSearch } from 'react-icons/bi';\r\nimport SidePanel from \"./SidePanel\";\r\nimport NotificationBadge from \"../helper/NotificationBadge\";\r\nimport LogoShimmer from \"./LogoShimmer\";\r\n\r\n\r\nconst Header = () => {\r\n  const dispatch = useDispatch();\r\n  const [mobileMenuOpen, setMobileMenuOpen] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const { user } = useSelector((state) => state.user);\r\n  const { soundEnabled, toggleSound } = useSound();\r\n  const { token } = useContext(Context);\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  const [unreadNotificationCount, setUnreadNotificationCount] = useState(0);\r\n  const [showPopup, setShowPopup] = useState(false);\r\n  const [popupMessage, setPopupMessage] = useState('');\r\n  const [animateNotification, setAnimateNotification] = useState(false);\r\n  const audioRef = useRef(null);\r\n\r\n  const searchQuery = useMemo(() => {\r\n    const URLSearch = new URLSearchParams(location.search);\r\n    return URLSearch.get(\"q\") || \"\";\r\n  }, [location]);\r\n  const [search, setSearch] = useState(searchQuery);\r\n  const debouncedSearch = useDebounce(search, 300);\r\n\r\n  const playNotificationSound = () => {\r\n    if (soundEnabled && audioRef.current) {\r\n      audioRef.current.currentTime = 0;\r\n      audioRef.current.play().catch(err => {\r\n        console.warn(\"Notification sound failed:\", err);\r\n      });\r\n    }\r\n  };\r\n\r\n  const triggerVibration = () => {\r\n    if (navigator.vibrate) {\r\n      navigator.vibrate([100, 50, 100]);\r\n    }\r\n  };\r\n\r\n  const truncateWords = (text, limit) => {\r\n    const words = text.split(/\\s+/);\r\n    if (words.length > limit) {\r\n      return {\r\n        truncated: words.slice(0, limit).join(' ') + '...',\r\n        original: text,\r\n        isTruncated: true,\r\n      };\r\n    }\r\n    return { truncated: text, original: text, isTruncated: false };\r\n  };\r\n\r\n  const fetchUnreadCount = useCallback(async () => {\r\n    if (user?._id) {\r\n      try {\r\n        const response = await fetch(SummaryApi.notificationCount.url, {\r\n          credentials: 'include',\r\n          headers: { 'Content-Type': 'application/json' },\r\n        });\r\n        const data = await response.json();\r\n        if (data.success) {\r\n          setUnreadNotificationCount(data.count);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"❌ Error fetching unread count:\", error);\r\n      }\r\n    }\r\n  }, [user?._id]);\r\n\r\n  const fetchNewNotifications = useCallback(async () => {\r\n    if (user?._id) {\r\n      try {\r\n        const response = await fetch(SummaryApi.getNewNotifications.url, {\r\n          credentials: 'include',\r\n          headers: { 'Content-Type': 'application/json' }\r\n        });\r\n        const data = await response.json();\r\n        if (data.success && Array.isArray(data.newNotifications)) {\r\n          const latest = data.newNotifications[0];\r\n          const lastShownId = localStorage.getItem('lastNotifiedId');\r\n          if (latest && latest._id !== lastShownId) {\r\n            localStorage.setItem('lastNotifiedId', latest._id);\r\n            setPopupMessage(latest.message || \"New notification received!\");\r\n            setShowPopup(true);\r\n            setAnimateNotification(true);\r\n            playNotificationSound();\r\n            triggerVibration();\r\n            setTimeout(() => setAnimateNotification(false), 2000);\r\n            setTimeout(() => setShowPopup(false), 4000);\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error(\"❌ Error fetching new notifications:\", error);\r\n      }\r\n    }\r\n  }, [user?._id]);\r\n\r\n  useEffect(() => {\r\n    if (debouncedSearch.trim()) {\r\n      navigate(`/search?q=${encodeURIComponent(debouncedSearch)}`);\r\n    }\r\n  }, [debouncedSearch, navigate]);\r\n\r\n  const handleLogout = useCallback(async () => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await fetch(SummaryApi.logout_user.url, {\r\n        method: SummaryApi.logout_user.method,\r\n        credentials: \"include\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      const data = await response.json();\r\n      if (data.success) {\r\n        toast.success(data.message);\r\n        dispatch(setUserDetails(null));\r\n        navigate(\"/\");\r\n      } else {\r\n        toast.error(data.message);\r\n      }\r\n    } catch (error) {\r\n      toast.error(\"Logout failed. Please try again.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [dispatch, navigate, token]);\r\n\r\n  useEffect(() => {\r\n    fetchUnreadCount();\r\n    fetchNewNotifications();\r\n    const unreadInterval = setInterval(fetchUnreadCount, 5000);\r\n    const notifyInterval = setInterval(fetchNewNotifications, 5000);\r\n    return () => {\r\n      clearInterval(unreadInterval);\r\n      clearInterval(notifyInterval);\r\n    };\r\n  }, [fetchUnreadCount, fetchNewNotifications]);\r\n\r\n  const goBack = () => navigate(-1);\r\n  const toggleMobileMenu = () => setMobileMenuOpen(prev => !prev);\r\n  const closeMobileMenu = () => setMobileMenuOpen(false);\r\n  const truncatedMessage = useMemo(() => truncateWords(popupMessage, 10), [popupMessage]);\r\n\r\n  return (\r\n    <header className=\"fixed z-40 bg-white text-black right-0 left-0 top-0 px-4 sm:px-6 lg:px-8 shadow-sm flex flex-col gap-2 sm:mt-9 md:mt-9 lg:mt-9 mt-9 \"> {/* Black border applied */}\r\n      \r\n      <div className=\"flex items-center justify-between min-h-[48px]\">\r\n        <div className=\"flex items-center justify-between md:mt-1 md:pt-1 lg:mt-1 lg:pt-1 w-full\">\r\n          <div className=\"flex items-center gap-4\">\r\n            <button onClick={toggleMobileMenu} className=\"text-gray-700 mt-1 md:hidden\">\r\n              <FontAwesomeIcon icon={faBars} className=\"h-6 w-6 glossy-text\" /> {/* Applied glossy-text */}\r\n            </button>\r\n\r\n            <div className=\"md:hidden flex-1 flex items-center mt-1 justify-center\">\r\n              <div className=\"flex items-center ml-4 py-1 w-full max-w-[200px]\"> \r\n                <BiSearch className=\"text-yellow-700 h-4 w-4 mr-1 glossy-text\" /> \r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"gift cards, vc, cc....\"\r\n                  className=\"bg-transparent text-black text-xs outline-none w-full placeholder:text-[14px] placeholder-gray-500 glossy-text\" // Applied glossy-text\r\n                  value={search}\r\n                  onChange={(e) => setSearch(e.target.value)}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <Link to=\"/home\" className=\"relative hidden md:flex items-center font-bold text-yellow-600 tracking-wide\">\r\n            <div className=\" flex py-1 flex-col justify-center\">\r\n                                                <div className=\"relative py-2  sm:mx-auto \">\r\n                                                    <div className=\"absolute inset-0 bg-gradient-to-r from-emerald-400 to-blue-500 shadow-lg transform rounded-3xl border-4 border-yellow-700\"></div>\r\n                                                    <div className=\"relative px-4 p-1.5 bg-white shadow-lg rounded-2xl sm:p-1.5 border-4 border-yellow-700\">\r\n                                                        <div className=\"\">\r\n                                                            <div className=\"grid grid-cols-1\">                    \r\n                                                                <LogoShimmer type=\"button\" />\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n          </Link>\r\n\r\n          <div className=\"hidden md:flex gap-3 items-center\">\r\n            {location.pathname === \"/search\" && (\r\n              <button onClick={goBack} className=\"text-yellow-600 hover:text-yellow-800\">\r\n                <FontAwesomeIcon icon={faArrowLeft} className=\"h-5 w-5 glossy-text\" /> {/* Applied glossy-text */}\r\n              </button>\r\n            )}\r\n\r\n            <div className=\"flex items-center  px-3 py-1 w-64\"> \r\n              <FcSearch className=\"text-gray-600 h-4 w-4 mr-2 glossy-text\" /> \r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"gift cards, vc, cc...\"\r\n                className=\"bg-transparent text-black text-sm outline-none w-full placeholder:text-sm placeholder-gray-500 glossy-text\" // Applied glossy-text\r\n                value={search}\r\n                onChange={(e) => setSearch(e.target.value)}\r\n              />\r\n            </div>\r\n\r\n            <nav className=\"flex items-center justify-between mx-auto gap-3 text-xs\">\r\n              <Link to=\"/record\" className=\"px-2 py-1 border-4 border-cyan-700 text-black hover:bg-cyan-600 hover:text-black rounded glossy-text\"> {/* Bold border and glossy-text */}\r\n                Trade Status\r\n              </Link>\r\n              <Link to=\"/datapad\" className=\"px-3 py-1 border-4 border-yellow-700 text-black hover:bg-yellow-500 hover:text-black rounded glossy-text\"> {/* Bold border and glossy-text */}\r\n                DataPad\r\n              </Link>\r\n            </nav>\r\n          </div>\r\n\r\n          <button\r\n            onClick={toggleSound}\r\n            className=\"px-3 py-1  ml-4  text-black hover:text-blue-500 rounded flex items-center glossy-text\" // Bold border and glossy-text\r\n          >\r\n            <FontAwesomeIcon icon={soundEnabled ? faVolumeUp : faVolumeMute} className=\"mr-1\" />\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <audio ref={audioRef} src={notificationSound} preload=\"auto\" />\r\n      <SidePanel\r\n        open={mobileMenuOpen}\r\n        setOpen={setMobileMenuOpen}\r\n        handleLogout={handleLogout}\r\n        loading={loading}\r\n        onCloseMenu={closeMobileMenu}\r\n      />\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;","import { useState, useEffect } from 'react';\r\n\r\nexport const useDebounce = (value, delay) => {\r\n    const [debouncedValue, setDebouncedValue] = useState(value);\r\n\r\n    useEffect(() => {\r\n        const handler = setTimeout(() => {\r\n            setDebouncedValue(value);\r\n        }, delay);\r\n\r\n        return () => {\r\n            clearTimeout(handler);\r\n        };\r\n    }, [value, delay]);\r\n\r\n    return debouncedValue;\r\n};"],"names":["Header","dispatch","useDispatch","mobileMenuOpen","setMobileMenuOpen","useState","loading","setLoading","user","useSelector","state","soundEnabled","toggleSound","useSound","token","useContext","Context","navigate","useNavigate","location","useLocation","unreadNotificationCount","setUnreadNotificationCount","showPopup","setShowPopup","popupMessage","setPopupMessage","animateNotification","setAnimateNotification","audioRef","useRef","searchQuery","useMemo","URLSearchParams","search","get","setSearch","debouncedSearch","useDebounce","value","delay","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","fetchUnreadCount","useCallback","async","_id","response","fetch","SummaryApi","notificationCount","url","credentials","headers","data","json","success","count","error","console","fetchNewNotifications","getNewNotifications","Array","isArray","newNotifications","latest","lastShownId","localStorage","getItem","setItem","message","current","currentTime","play","catch","err","warn","navigator","vibrate","trim","encodeURIComponent","handleLogout","logout_user","method","Authorization","toast","setUserDetails","unreadInterval","setInterval","notifyInterval","clearInterval","truncateWords","text","limit","words","split","length","truncated","slice","join","original","isTruncated","_jsxs","className","children","_jsx","onClick","toggleMobileMenu","prev","FontAwesomeIcon","icon","faBars","BiSearch","type","placeholder","onChange","e","target","Link","to","LogoShimmer","pathname","goBack","faArrowLeft","FcSearch","faVolumeUp","faVolumeMute","ref","src","notificationSound","preload","SidePanel","open","setOpen","onCloseMenu","closeMobileMenu"],"sourceRoot":""}