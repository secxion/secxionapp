import React, { useState, useRef, useEffect } from "react";
import { motion, AnimatePresence } from "framer-motion";
import { Link } from "react-router-dom";
import {
  FaWallet,
  FaUser,
  FaStore,
  FaBook,
  FaClipboardList,
} from "react-icons/fa";
import { IoChatbubbleEllipsesOutline } from "react-icons/io5";
import HomeFooter from "../Components/HomeFooter";
import NetBlog from "../Components/NetBlog";
import giftCardImages from "../helper/heroimages";

const menuItems = [

   
  {
    label: "Market",
    path: "/section",
    color: "bg-white hover:bg-yellow-100",
    icon: <FaStore className="text-4xl text-yellow-600" />, 
  },
  {
    label: "Transaction Record",
    path: "/record",
    color: "bg-white hover:bg-yellow-100",
    icon: <FaClipboardList className="text-4xl text-yellow-600" />, 
  },
  {
    label: "Wallet",
    path: "/mywallet",
    color: "bg-white hover:bg-yellow-100",
    icon: <FaWallet className="text-4xl text-yellow-600" />, 
  },
  {
    label: "Profile",
    path: "/profile",
    color: "bg-white hover:bg-yellow-100",
    icon: <FaUser className="text-4xl text-yellow-600" />, 
  },
  {
    label: "Data Pad",
    path: "/datapad",
    color: "bg-white hover:bg-yellow-100",
    icon: <FaBook className="text-4xl text-yellow-600" />, 
  },
  {
    label: "Contact Support",
    path: "/report",
    color: "bg-white hover:bg-yellow-100",
    icon: (
      <IoChatbubbleEllipsesOutline className="text-4xl text-yellow-600" /> 
    ),
  },
];

const cardVariants = {
  initial: { opacity: 0, y: 20, scale: 0.95 },
  animate: {
    opacity: 1,
    y: 0,
    scale: 1,
    transition: { duration: 0.5, ease: "easeInOut" },
  },
  whileHover: {
    scale: 1.05,
    transition: { duration: 0.2, ease: "easeOut" },
  },
};

const Home = () => {
  const menuSectionRef = useRef(null);
  const [currentImageIndex, setCurrentImageIndex] = useState(0);
  const [showBlog, setShowBlog] = useState(true);

  useEffect(() => {
    const interval = setInterval(() => {
      setCurrentImageIndex((prevIndex) => (prevIndex + 1) % giftCardImages.length);
    }, 6000);
    return () => clearInterval(interval);
  }, []);

  const currentImage = giftCardImages[currentImageIndex];

  const scrollToSection = (ref) => {
    ref.current?.scrollIntoView({ behavior: "smooth" });
  };

  return (
    <div className="relative min-h-screen w-full bg-white text-yellow-900">
      <main className="relative z-10 w-full px-4 py-8 space-y-12">
      
        <header
          className="relative w-full h-[65vh] min-h-[320px] mt-16 bg-cover bg-center flex items-center justify-center shadow-xl rounded-3xl overflow-hidden"
          style={{ backgroundImage: `url(${currentImage.url})` }}
        >
          <div className="absolute inset-0" />
          <div className="relative z-10 text-center px-4 max-w-3xl mx-auto">
            <motion.div
              className="mt-6"
              initial={{ opacity: 0 }}
              animate={{ opacity: 1 }}
              transition={{ delay: 0.4 }}
            >
              <Link to="/section" className="inline-block bg-yellow-500 text-white border-2 border-yellow-600 px-6 py-3 uppercase font-semibold text-sm rounded-full shadow-lg hover:bg-yellow-600 transition duration-200">
                Market
              </Link>
            </motion.div>
          </div>
        </header>

        <div className="flex justify-center">
          <button
            onClick={() => setShowBlog(!showBlog)}
            className="bg-yellow-500 hover:bg-yellow-600 text-white px-6 py-3 rounded-full font-semibold shadow-lg transition duration-300"
          >
            {showBlog ? "Show Menu" : "Show Blog"}
          </button>
        </div>

        <AnimatePresence mode="wait">
          {showBlog && (
            <motion.section
              key="blog"
              initial={{ opacity: 0, y: 30 }}
              animate={{ opacity: 1, y: 0 }}
              exit={{ opacity: 0, y: -30 }}
              transition={{ duration: 0.6 }}
              className="pb-16"
            >
              <h2 className="text-3xl font-bold text-center mb-6">Latest Insights</h2>
              <div className="w-full">
                <NetBlog limit={4} />
              </div>
            </motion.section>
          )}
        </AnimatePresence>

        <AnimatePresence mode="wait">
          {!showBlog && (
            <motion.section
              key="menu"
              ref={menuSectionRef}
              initial={{ opacity: 0, y: 30 }}
              animate={{ opacity: 1, y: 0 }}
              exit={{ opacity: 0, y: -30 }}
              transition={{ duration: 0.6 }}
              className="grid grid-cols-2 sm:grid-cols-3 lg:grid-cols-4 xl:grid-cols-6 gap-6 pb-24"
            >
              {menuItems.map((item, index) => (
                <motion.div
                  key={index}
                  variants={cardVariants}
                  initial="initial"
                  animate="animate"
                  whileHover="whileHover"
                  className={`rounded-2xl p-4 text-center shadow-md cursor-pointer ${item.color} flex flex-col items-center justify-center transition-all duration-300`}
                >
                  <Link to={item.path} className="flex flex-col items-center gap-3 w-full h-full">
                    <div>{item.icon}</div>
                    <span className="text-sm font-medium uppercase text-center">
                      {item.label}
                    </span>
                  </Link>
                </motion.div>
              ))}
            </motion.section>
          )}
        </AnimatePresence>

        <div className="mt-auto">
          <HomeFooter
            onBlogClick={() => {
              setShowBlog(true);
              scrollToSection(menuSectionRef);
            }}
            onMenuClick={() => {
              setShowBlog(false);
              scrollToSection(menuSectionRef);
            }}
            isBlogVisible={showBlog}
          />
        </div>
      </main>
    </div>
  );
};

export default Home;
